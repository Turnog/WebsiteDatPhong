// <auto-generated />
using System;
using KetNoiDB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KetNoi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250515163852_mota-themtruongAmentity")]
    partial class motathemtruongAmentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NghiepVu.Entities.Amentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Amentities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Bể bơi ngoài trời",
                            HotelId = 1,
                            Name = "Bể bơi"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Bể bơi trong nhà",
                            HotelId = 1,
                            Name = "Bể bơi"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Wifi 5G",
                            HotelId = 2,
                            Name = "Wifi"
                        });
                });

            modelBuilder.Entity("NghiepVu.Entities.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "TP. Hồ Chí Minh, Việt Nam",
                            ImageUrl = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/464640824.jpg?k=2ce1467d833309a6d9e4f1e5d35ba87454a50bcf620cc5926b410aca8148c219&o=&hp=1",
                            Name = "La Vela Saigon Hotel",
                            Occupancy = 2,
                            Price = 100.0,
                            SquareMeters = 20
                        },
                        new
                        {
                            Id = 2,
                            Description = "TP. Hồ Chí Minh, Việt Nam",
                            ImageUrl = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/325222137.jpg?k=56c624212a1b3f9257f34cc3980bc256becdc6bd4483079fac54b5d42e1c7147&o=&hp=1",
                            Name = "La Vela Saigon Hotel",
                            Occupancy = 2,
                            Price = 100.0,
                            SquareMeters = 20
                        },
                        new
                        {
                            Id = 3,
                            Description = "TP. Hồ Chí Minh, Việt Nam",
                            ImageUrl = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/257933259.jpg?k=ce22ef5c93a25d9c1667f09f8c4caf2fea5c7d094433788b71a37dbb16d96c15&o=&hp=1",
                            Name = "La Vela Saigon Hotel",
                            Occupancy = 2,
                            Price = 100.0,
                            SquareMeters = 20
                        },
                        new
                        {
                            Id = 4,
                            Description = "TP. Hồ Chí Minh, Việt Nam",
                            ImageUrl = "https://cf.bstatic.com/xdata/images/hotel/max1024x768/388865161.jpg?k=02afa7769a3ec4fb788fdcefac0ad814a36e43d2022b92b5e5e3114cb98040c7&o=&hp=1",
                            Name = "La Vela Saigon Hotel",
                            Occupancy = 2,
                            Price = 100.0,
                            SquareMeters = 20
                        });
                });

            modelBuilder.Entity("NghiepVu.Entities.HotelNumber", b =>
                {
                    b.Property<int>("Hotel_Number")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Hotel_Number");

                    b.HasIndex("HotelId");

                    b.ToTable("HotelNumbers");

                    b.HasData(
                        new
                        {
                            Hotel_Number = 101,
                            HotelId = 1
                        },
                        new
                        {
                            Hotel_Number = 102,
                            HotelId = 1
                        },
                        new
                        {
                            Hotel_Number = 103,
                            HotelId = 1
                        },
                        new
                        {
                            Hotel_Number = 104,
                            HotelId = 1
                        });
                });

            modelBuilder.Entity("NghiepVu.Entities.Amentity", b =>
                {
                    b.HasOne("NghiepVu.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("NghiepVu.Entities.HotelNumber", b =>
                {
                    b.HasOne("NghiepVu.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });
#pragma warning restore 612, 618
        }
    }
}
